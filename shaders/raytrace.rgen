#version 460

#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : enable
  
#include "raycommon.glsl"

layout(set = 0, binding = 0) uniform SceneData{

	mat4 view;
	mat4 proj;
	mat4 viewproj;
    mat4 inverseView;
    mat4 inverseProj;
	vec4 sunlightDirection; //w for sun power
	vec4 sunlightColor;
	float lightCutoff;
	float lightOuterCutoff;
	float lightIntensity;
} sceneData;

layout(binding = 0, set = 1) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 1,  rgba32f) uniform image2D image;

layout(location = 0) rayPayloadEXT hitPayload prd;

void main() 
{
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = sceneData.inverseView * vec4(0, 0, 0, 1);
    vec4 target = sceneData.inverseProj * vec4(d.x, d.y, 1, 1);
    vec4 direction = sceneData.inverseView * vec4(normalize(target.xyz), 0);

    uint rayFlags = gl_RayFlagsOpaqueEXT;
    float tMin = 0.0001;
    float tMax = 10000.0;

    traceRayEXT(topLevelAS, rayFlags, 0xFF, 0, 0, 0, origin.xyz, tMin, direction.xyz, tMax, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(prd.hitValue, 1.0));
}
/* vim: set filetype=glsl : */
